{{- if .Values.clickhouse.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: clickhouse
  labels:
    app: clickhouse
spec:
  serviceName: clickhouse-headless
  replicas: {{ .Values.clickhouse.replicaCount }}
  selector:
    matchLabels:
      app: clickhouse
  {{- if .Values.clickhouse.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: clickhouse-data
      spec:
        storageClassName: {{ .Values.clickhouse.persistence.storageClass }}
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.clickhouse.persistence.size }}
  {{- end }}
  template:
    metadata:
      labels:
        app: clickhouse
    spec:
      containers:
        - name: clickhouse
          image: {{ .Values.images.clickhouse.repository }}:{{ .Values.images.clickhouse.tag }}
          ports:
            - containerPort: {{ .Values.clickhouse.service.port }}
              name: http
            - containerPort: {{ .Values.clickhouse.service.nativePort }}
              name: native
          resources:
            {{- toYaml .Values.clickhouse.resources | nindent 12 }}
          env:
            - name: CLICKHOUSE_DB
              value: {{ .Values.clickhouse.database }}
            - name: CLICKHOUSE_USER
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: CLICKHOUSE_USER
            - name: CLICKHOUSE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: CLICKHOUSE_PASSWORD
            - name: CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT
              value: "1"
          volumeMounts:
            {{- if .Values.clickhouse.persistence.enabled }}
            - name: clickhouse-data
              mountPath: /var/lib/clickhouse
            {{- end }}
          livenessProbe:
            httpGet:
              path: /ping
              port: {{ .Values.clickhouse.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ping
              port: {{ .Values.clickhouse.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
      {{- if not .Values.clickhouse.persistence.enabled }}
      volumes:
        - name: clickhouse-data
          emptyDir: {}
      {{- end }}
{{- end }} 